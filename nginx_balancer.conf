user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

#load_module modules/ngx_http_vhost_traffic_status_module.so;
events {
    worker_connections 1024;
}


http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
        #vhost_traffic_status_zone;
        upstream backend{
                least_conn;
                server 95.163.249.250:5000 weight=5 ;
                server 213.219.213.12:5000 weight=3  ;
                server 95.163.251.171:5000 weight=1  ;
                check interval=5000 rise=1 fall=2 timeout=1000;

        }


    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location /api {
                proxy_pass  http://backend/api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr; # real clients ip
                proxy_next_upstream error timeout invalid_header http_502; #cases
                proxy_next_upstream_tries 1; # 2 other backends
                proxy_next_upstream_timeout 100ms; # time to connect to other backend

                proxy_connect_timeout 2s; # time to connect to original backend
                proxy_send_timeout 2s;
                proxy_read_timeout 10s; #set long
        }



        location /stub_status {
            stub_status on;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}


